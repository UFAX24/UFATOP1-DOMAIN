function table_hide_info(t) { (t = $(t)).find(".table_hover").remove() } function table_hover_info(t) { (t = $(t)).parent().parent(); var a = t.attr("data-time"); t.attr("data-time"); t.hasClass("next_game_box") && t.attr("data-score", "?:?"); var e = $('<div class="table_hover"><div class="date">' + a + '</div><div class="home">' + t.attr("data-home") + '</div><div class="score">' + t.attr("data-score") + '</div><div class="away">' + t.attr("data-away") + "</div></div>"); t.append(e) } function tables_refresh() { var t = "//data.fctablesmedia.com/cache/tables.json?t=" + Math.ceil((new Date).getTime() / 1e3); function i(t, a) { parseFloat(t.text()) != parseFloat(a) && function (t) { var a = !1, e = window.setInterval(function () { (a = !a) ? t.addClass("invalid-blink") : t.removeClass("invalid-blink") }, 500); setTimeout(function () { clearInterval(e), t.removeClass("invalid-blink") }, 5e3) }(t), t.html(a) } $.ajax({ url: t, dataType: "json", cache: !0, data: {}, success: function (t) { var s = $("#table"), n = s.attr("data-id"); n && $.each(t.stages, function (t, a) { if (a.id == n && 0 < s.length) { $.each(a.table, function (t, a) { var e = s.find('tbody tr[data-t="' + a.t + '"]'); 0 < e.length && (e.attr("data-pos", a.pos), e.find(".po").html(a.pos), i(e.find(".ga"), a.g), i(e.find(".points"), a.pts), i(e.find(".wi"), a.w), i(e.find(".dr"), a.d), i(e.find(".de"), a.de), i(e.find(".gf"), a.gf), i(e.find(".gaa"), a.gl), i(e.find(".gd"), a.gs)) }); var e = s.find("tbody tr"); e.sort(function (t, a) { return parseInt($(t).attr("data-pos")) - parseInt($(a).attr("data-pos")) }), e.each(function (t, a) { s.find("tbody").append(a) }) } }) } }) } function scr() { setInterval(function () { $.ajax({ url: "//data.fctablesmedia.com/cache/scores_2.json?_=" + Math.ceil((new Date).getTime() / 1e3), dataType: "json", cache: !0, data: {}, success: function (t) { $.each(t.games, function (t, a) { var e = $('.game[data-id="' + a.id + '"]'); if (e && 0 < e.length) { var s = e.find(".score"); s.find(".sa").html(a.rh), s.find(".sb").html(a.ra), e.removeClass("status_finished").removeClass("status_started").removeClass("status_not_started").addClass("status_" + a.st) } }) } }) }, 25e3) } function sc() { var e = $(".grscore"); 0 != e.length && (e.hasClass("status_finished") || 1e3 * parseInt(e.attr("data-time")) > (new Date).getTime() || setInterval(function () { $.ajax({ url: "//data.fctablesmedia.com/cache/scores_2.json?_=" + Math.ceil((new Date).getTime() / 1e3), dataType: "json", cache: !0, data: {}, success: function (t) { $.each(t.games, function (t, a) { a.id == gi && (e.find(".min span").html(a.m), e.find(".status").html(statuses_lang[a.sti]), e.find(".sc").html(a.rh + "-" + a.ra), e.removeClass("status_finished").removeClass("status_started").removeClass("status_not_started").addClass("status_" + a.st)) }) } }) }, 2e4)) } $(document).ready(function () { $(".form_game").hover(function () { table_hover_info(this) }, function () { table_hide_info(this) }), $(".next_game_box").hover(function () { table_hover_info(this) }, function () { table_hide_info(this) }), 0 < $("#table").length && (setInterval(function () { tables_refresh() }, 35e3), tables_refresh()) });