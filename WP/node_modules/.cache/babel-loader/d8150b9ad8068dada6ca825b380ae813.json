{"ast":null,"code":"var _jsxFileName = \"D:\\\\WORDPRESS\\\\UFATOP1\\\\WP\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport i18n from './i18n';\nimport { useTranslation } from 'react-i18next';\nimport fetchJsonp from 'fetch-jsonp';\nimport PageCarousel from './components/PageCarousel';\nimport Settings from './components/Settings';\nimport Header from './components/Header';\nimport ActionButtons from './components/ActionButtons';\nimport Footer from './components/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STORED_VALUES = JSON.parse(localStorage.getItem('wpShow') || '{}');\n/**\n * Main stateles component \n */\n\nfunction App() {\n  _s();\n\n  const {\n    t\n  } = useTranslation(); // Hook with miscellaneous state variables\n\n  const [conf, setConf] = useState({\n    wpSite: STORED_VALUES.wpSite || '',\n    interval: STORED_VALUES.interval || 10,\n    ready: false,\n    err: null,\n    loading: false,\n    categories: null,\n    tags: null,\n    pages: null,\n    posts: null,\n    dateFrom: new Date(STORED_VALUES.from || Date.now()),\n    dateTo: new Date(STORED_VALUES.to || Date.now()),\n    dateFirst: new Date(),\n    includeCategoryPages: !(STORED_VALUES.includeCategoryPages === false),\n    includeTagPages: STORED_VALUES.includeTagPages === true,\n    randomOrder: !(STORED_VALUES.randomOrder === false),\n    numUrls: 0\n  }); // Specific hook for 'playing'\n\n  const [playing, setPlaying] = useState(false); // Always check if fetch responses have the 'ok' attribute \n\n  const handleFetchErrors = response => {\n    if (!response.ok) throw Error(response.statusText || 'Error desconegut');\n    return response;\n  }; // Obtain information from the WordPress site fetching multiple API services\n\n\n  const checkSite = () => {\n    // Remove trailing slashes, if any\n    let base = conf.wpSite;\n\n    while (base.endsWith('/')) base = base.substr(0, base.length - 1); // Set the `loading` flag and reset conf to default values\n\n\n    setConf({ ...conf,\n      wpSite: base,\n      err: null,\n      loading: true,\n      categories: null,\n      pages: null,\n      posts: null,\n      numUrls: 0\n    }); // Initialize main arrays and launch API queries\n\n    let categories = [],\n        tags = [],\n        posts = [],\n        pages = [];\n    Promise.all([apiQuery(base, 'categories', ['id', 'link', 'name', 'count'], categories), apiQuery(base, 'tags', ['id', 'link', 'name', 'count'], tags), apiQuery(base, 'pages', ['id', 'link', 'modified', 'type', 'status', 'title'], pages), apiQuery(base, 'posts', ['id', 'link', 'modified', 'type', 'status', 'title', 'categories', 'tags'], posts)]).then(() => {\n      if (categories.length === 0) throw new Error(\"ERROR ไม่มีหมวดหมู่\"); // Select only categories and tags with at least one post, and sort them alphabetically\n\n      categories = categories.filter(cat => cat.count > 0).sort((a, b) => a.name < b.name ? -1 : 1);\n      tags = tags.filter(tag => tag.count > 0).sort((a, b) => a.name < b.name ? -1 : 1); // Clear stored values if 'wpSite' has changed\n\n      if (base !== STORED_VALUES.wpSite) Object.assign(STORED_VALUES, {\n        categories: [],\n        tags: [],\n        pages: [],\n        posts: []\n      }); // Set the initial `selected` state for all items\n\n      const sss = [STORED_VALUES.categories, STORED_VALUES.tags, STORED_VALUES.pages, STORED_VALUES.posts];\n      [categories, tags, pages, posts].forEach((set, i) => set.forEach(el => el.selected = sss[i].includes(el.id))); // Convert the 'modified' string to Date objects, and find the oldest one\n\n      let firstDate = new Date();\n      [pages, posts].forEach(set => {\n        set.forEach(el => {\n          el.modified = new Date(el.modified);\n          if (el.modified < firstDate) firstDate = el.modified;\n        });\n        set.sort((a, b) => {\n          return a.modified > b.modified ? -1 : a.modified < b.modified ? 1 : a.title < b.title ? -1 : 1;\n        });\n      }); // Move `firstDate` back one day\n\n      let from = STORED_VALUES.from || firstDate - 24 * 60 * 60 * 1000; // Set inRange flag to `true` for all published posts and plages\n\n      posts.forEach(post => post.inRange = post.type === 'post' && post.status === 'publish' && post.modified >= from);\n      pages.forEach(page => page.inRange = page.type === 'page' && page.status === 'publish'); // Unset `loading` and save the new state\n\n      const {\n        includeCategoryPages,\n        includeTagPages\n      } = conf;\n      setConf({ ...conf,\n        loading: false,\n        categories,\n        tags,\n        pages,\n        posts,\n        dateFirst: new Date(firstDate),\n        dateFrom: new Date(from),\n        dateTo: new Date(),\n        numUrls: doCountUrls({\n          pages,\n          posts,\n          categories,\n          tags,\n          includeCategoryPages,\n          includeTagPages\n        }),\n        err: null\n      });\n    }).catch(err => {\n      console.log(`Error fetching data: ${err.message}`);\n      setConf({ ...conf,\n        loading: false,\n        err: err.message\n      });\n    });\n  }; // Query the WordPress REST API obtaining all the information related to one type of data\n  // Results are obtained with paginated calls using the max size (100 records per call)\n  // and requesting only specific fields \n\n\n  const apiQuery = (base, query, fields, result = [], pageSize = 100, page = 0, pages = 1) => {\n    // Build the API URL\n    const url = `${base}/wp-json/wp/v2/${query}/?page=${++page}&per_page=${pageSize}&_envelope=1&${fields.map(f => `_fields[]=${f}`).join('&')}`;\n    console.log(`Fetching page ${page}/${pages} of ${url}`); // If there are more pages, prepare a recursive call to get more data\n    // Return `result` otherwise\n\n    const next = () => page < pages ? apiQuery(base, query, fields, result, pageSize, page, pages) : result; // Avoid CORS issues fetching the API in JSONP mode\n\n\n    return fetchJsonp(url, {\n      jsonpCallback: '_jsonp',\n      timeout: 7000\n    }).then(response => handleFetchErrors(response)).then(response => response.json()).then(data => {\n      // Read the total number of pages\n      if (data.headers && data.headers['X-WP-TotalPages']) pages = data.headers['X-WP-TotalPages'];\n      if (data.body) result.push(...data.body); // This will return `result` or just a promise call to the next page of results\n\n      return next();\n    }).catch(err => {\n      console.log(`Error fetching page ${page} of ${query}: ${err}`); // Make the API call tolerant to errors, returning always the accumulated result\n\n      return next();\n    });\n  }; // Mark as selected posts created or updated between the specified dates, and\n  // related to at least one selected category  \n\n\n  const selectPostsByDateAndCategory = (dateFrom = conf.dateFrom, dateTo = conf.dateTo, posts = conf.posts, updateConf = true) => {\n    // Get the ids of selected categories\n    //const activeCategories = [], activetags=[];\n    const activeCategories = conf.categories.filter(cat => cat.selected).map(cat => cat.id);\n    const activeTags = conf.tags.filter(tag => tag.selected).map(tag => tag.id); // Select or unselect posts based on its date and categories\n\n    posts.forEach(post => {\n      const {\n        categories,\n        tags,\n        modified,\n        type,\n        status\n      } = post;\n      post.inRange = modified >= dateFrom && modified <= dateTo && type === 'post' && status === 'publish';\n      post.selected = post.inRange && (categories.map(cat => activeCategories.includes(cat)).includes(true) || tags.map(tag => activeTags.includes(tag)).includes(true));\n    }); // Update dates and clear the error flag, if set\n\n    if (updateConf) setConf({ ...conf,\n      dateFrom,\n      dateTo,\n      err: null,\n      numUrls: countUrls(false)\n    });\n  }; // Get the final list of URLs used in the carousel, maybe randomized\n\n\n  const getUrls = () => {\n    const {\n      posts,\n      pages,\n      categories,\n      tags,\n      includeCategoryPages,\n      includeTagPages,\n      randomOrder\n    } = conf;\n    const urls = [];\n    urls.push(...posts.filter(post => post.selected).map(post => post.link));\n    urls.push(...pages.filter(page => page.selected).map(page => page.link));\n    if (includeCategoryPages) urls.push(...categories.filter(cat => cat.selected).map(cat => cat.link));\n    if (includeTagPages) urls.push(...tags.filter(cat => cat.selected).map(cat => cat.link));\n    return randomOrder ? shuffle(urls) : urls;\n  }; // Count the current number of valid URLs\n\n\n  const countUrls = (updateConf = true) => {\n    const numUrls = doCountUrls(conf);\n    if (updateConf) setConf({ ...conf,\n      numUrls\n    });\n    return numUrls;\n  };\n\n  const doCountUrls = ({\n    pages,\n    posts,\n    categories,\n    tags,\n    includeCategoryPages,\n    includeTagPages\n  }) => {\n    return pages.filter(page => page.selected).length + posts.filter(post => post.selected).length + (includeCategoryPages ? categories.filter(cat => cat.selected).length : 0) + (includeTagPages ? tags.filter(tag => tag.selected).length : 0);\n  }; // Shuffle the provided array using the Fisher-Yates (aka Knuth) algorithm\n  // See: https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\n\n\n  const shuffle = array => {\n    let currentIndex = array.length; // While there remain elements to shuffle...\n\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      const randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1; // And swap it with the current element.\n\n      let temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  };\n\n  const saveSettings = () => {\n    // Update the `STORED_VALUES` object\n    Object.assign(STORED_VALUES, {\n      wpSite: conf.wpSite,\n      interval: conf.interval,\n      from: conf.dateFrom.getTime(),\n      to: conf.dateTo.getTime(),\n      includeCategoryPages: conf.includeCategoryPages,\n      includeTagPages: conf.includeTagPages,\n      randomOrder: conf.randomOrder,\n      categories: conf.categories.filter(e => e.selected).map(e => e.id),\n      tags: conf.tags.filter(e => e.selected).map(e => e.id),\n      pages: conf.pages.filter(e => e.selected).map(e => e.id),\n      posts: conf.posts.filter(e => e.selected).map(e => e.id)\n    }); // Save settings in browser's local storage\n\n    localStorage.setItem('wpShow', JSON.stringify(STORED_VALUES));\n  }; // Main content\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [!playing && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        t,\n        i18n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Settings, {\n        conf,\n        setConf,\n        checkSite,\n        selectPostsByDateAndCategory,\n        countUrls,\n        t,\n        i18n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ActionButtons, {\n        conf,\n        saveSettings,\n        i18n,\n        t,\n        getUrls,\n        setPlaying\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        t\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }, this), playing && /*#__PURE__*/_jsxDEV(PageCarousel, {\n      urls: getUrls(),\n      interval: conf.interval\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"VB8OTwY9ilj0jBKY98Wj0L5ujZ4=\", false, function () {\n  return [useTranslation];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/WORDPRESS/UFATOP1/WP/src/App.js"],"names":["React","useState","i18n","useTranslation","fetchJsonp","PageCarousel","Settings","Header","ActionButtons","Footer","STORED_VALUES","JSON","parse","localStorage","getItem","App","t","conf","setConf","wpSite","interval","ready","err","loading","categories","tags","pages","posts","dateFrom","Date","from","now","dateTo","to","dateFirst","includeCategoryPages","includeTagPages","randomOrder","numUrls","playing","setPlaying","handleFetchErrors","response","ok","Error","statusText","checkSite","base","endsWith","substr","length","Promise","all","apiQuery","then","filter","cat","count","sort","a","b","name","tag","Object","assign","sss","forEach","set","i","el","selected","includes","id","firstDate","modified","title","post","inRange","type","status","page","doCountUrls","catch","console","log","message","query","fields","result","pageSize","url","map","f","join","next","jsonpCallback","timeout","json","data","headers","body","push","selectPostsByDateAndCategory","updateConf","activeCategories","activeTags","countUrls","getUrls","urls","link","shuffle","array","currentIndex","randomIndex","Math","floor","random","temporaryValue","saveSettings","getTime","e","setItem","stringify"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport i18n from './i18n';\nimport { useTranslation } from 'react-i18next';\nimport fetchJsonp from 'fetch-jsonp';\nimport PageCarousel from './components/PageCarousel';\nimport Settings from './components/Settings';\nimport Header from './components/Header';\nimport ActionButtons from './components/ActionButtons';\nimport Footer from './components/Footer';\n\n\nconst STORED_VALUES = JSON.parse(localStorage.getItem('wpShow') || '{}');\n\n/**\n * Main stateles component \n */\nfunction App() {\n\n  const { t } = useTranslation();\n\n  // Hook with miscellaneous state variables\n  const [conf, setConf] = useState({\n    wpSite: STORED_VALUES.wpSite || '',\n    interval: STORED_VALUES.interval || 10,\n    ready: false,\n    err: null,\n    loading: false,\n    categories: null,\n    tags: null,\n    pages: null,\n    posts: null,\n    dateFrom: new Date(STORED_VALUES.from || Date.now()),\n    dateTo: new Date(STORED_VALUES.to || Date.now()),\n    dateFirst: new Date(),\n    includeCategoryPages: !(STORED_VALUES.includeCategoryPages === false),\n    includeTagPages: STORED_VALUES.includeTagPages === true,\n    randomOrder: !(STORED_VALUES.randomOrder === false),\n    numUrls: 0,\n  });\n\n  // Specific hook for 'playing'\n  const [playing, setPlaying] = useState(false);\n\n  // Always check if fetch responses have the 'ok' attribute \n  const handleFetchErrors = (response) => {\n    if (!response.ok)\n      throw Error(response.statusText || 'Error desconegut');\n    return response;\n  }\n\n  // Obtain information from the WordPress site fetching multiple API services\n  const checkSite = () => {\n\n    // Remove trailing slashes, if any\n    let base = conf.wpSite;\n    while (base.endsWith('/'))\n      base = base.substr(0, base.length - 1);\n\n    // Set the `loading` flag and reset conf to default values\n    setConf({\n      ...conf,\n      wpSite: base,\n      err: null,\n      loading: true,\n      categories: null,\n      pages: null,\n      posts: null,\n      numUrls: 0,\n    });\n\n    // Initialize main arrays and launch API queries\n    let categories = [], tags = [], posts = [], pages = [];\n    Promise.all([\n      apiQuery(base, 'categories', ['id', 'link', 'name', 'count'], categories),\n      apiQuery(base, 'tags', ['id', 'link', 'name', 'count'], tags),\n      apiQuery(base, 'pages', ['id', 'link', 'modified', 'type', 'status', 'title'], pages),\n      apiQuery(base, 'posts', ['id', 'link', 'modified', 'type', 'status', 'title', 'categories', 'tags'], posts),\n    ])\n      .then(() => {\n        if (categories.length === 0)\n          throw new Error(\"ERROR ไม่มีหมวดหมู่\");\n\n        // Select only categories and tags with at least one post, and sort them alphabetically\n        categories = categories.filter(cat => cat.count > 0).sort((a, b) => a.name < b.name ? -1 : 1);\n        tags = tags.filter(tag => tag.count > 0).sort((a, b) => a.name < b.name ? -1 : 1);\n\n        // Clear stored values if 'wpSite' has changed\n        if (base !== STORED_VALUES.wpSite)\n          Object.assign(STORED_VALUES, { categories: [], tags: [], pages: [], posts: [] });\n\n        // Set the initial `selected` state for all items\n        const sss = [STORED_VALUES.categories, STORED_VALUES.tags, STORED_VALUES.pages, STORED_VALUES.posts];\n        [categories, tags, pages, posts].forEach((set, i) => set.forEach(el => el.selected = sss[i].includes(el.id)));\n\n        // Convert the 'modified' string to Date objects, and find the oldest one\n        let firstDate = new Date();\n        [pages, posts].forEach(set => {\n          set.forEach(el => {\n            el.modified = new Date(el.modified)\n            if (el.modified < firstDate)\n              firstDate = el.modified;\n          });\n          set.sort((a, b) => {\n            return a.modified > b.modified ? -1\n              : a.modified < b.modified ? 1\n                : a.title < b.title ? -1 : 1;\n          });\n        });\n\n        // Move `firstDate` back one day\n        let from = STORED_VALUES.from || firstDate - 24 * 60 * 60 * 1000;\n\n        // Set inRange flag to `true` for all published posts and plages\n        posts.forEach(post => post.inRange = post.type === 'post' && post.status === 'publish' && post.modified >= from);\n        pages.forEach(page => page.inRange = page.type === 'page' && page.status === 'publish');\n\n        // Unset `loading` and save the new state\n        const { includeCategoryPages, includeTagPages } = conf;\n        setConf({\n          ...conf,\n          loading: false,\n          categories, tags, pages, posts,\n          dateFirst: new Date(firstDate),\n          dateFrom: new Date(from),\n          dateTo: new Date(),\n          numUrls: doCountUrls({ pages, posts, categories, tags, includeCategoryPages, includeTagPages }),\n          err: null,\n        });\n\n      })\n      .catch(err => {\n        console.log(`Error fetching data: ${err.message}`);\n        setConf({ ...conf, loading: false, err: err.message });\n      })\n  }\n\n  // Query the WordPress REST API obtaining all the information related to one type of data\n  // Results are obtained with paginated calls using the max size (100 records per call)\n  // and requesting only specific fields \n  const apiQuery = (base, query, fields, result = [], pageSize = 100, page = 0, pages = 1) => {\n    // Build the API URL\n    const url = `${base}/wp-json/wp/v2/${query}/?page=${++page}&per_page=${pageSize}&_envelope=1&${fields.map(f => `_fields[]=${f}`).join('&')}`;\n\n    console.log(`Fetching page ${page}/${pages} of ${url}`);\n\n    // If there are more pages, prepare a recursive call to get more data\n    // Return `result` otherwise\n    const next = () => page < pages\n      ? apiQuery(base, query, fields, result, pageSize, page, pages)\n      : result;\n\n    // Avoid CORS issues fetching the API in JSONP mode\n    return fetchJsonp(url, {\n      jsonpCallback: '_jsonp',\n      timeout: 7000,\n    })\n      .then(response => handleFetchErrors(response))\n      .then(response => response.json())\n      .then(data => {\n        // Read the total number of pages\n        if (data.headers && data.headers['X-WP-TotalPages'])\n          pages = data.headers['X-WP-TotalPages'];\n        if (data.body)\n          result.push(...data.body);\n        // This will return `result` or just a promise call to the next page of results\n        return next();\n      })\n      .catch(err => {\n        console.log(`Error fetching page ${page} of ${query}: ${err}`);\n        // Make the API call tolerant to errors, returning always the accumulated result\n        return next();\n      });\n  }\n\n  // Mark as selected posts created or updated between the specified dates, and\n  // related to at least one selected category  \n  const selectPostsByDateAndCategory = (dateFrom = conf.dateFrom, dateTo = conf.dateTo, posts = conf.posts, updateConf = true) => {\n\n    // Get the ids of selected categories\n    //const activeCategories = [], activetags=[];\n    const activeCategories = conf.categories.filter(cat => cat.selected).map(cat => cat.id);\n    const activeTags = conf.tags.filter(tag => tag.selected).map(tag => tag.id);\n\n    // Select or unselect posts based on its date and categories\n    posts.forEach(post => {\n      const { categories, tags, modified, type, status } = post;\n      post.inRange = modified >= dateFrom && modified <= dateTo && type === 'post' && status === 'publish';\n      post.selected = post.inRange && (\n        categories.map(cat => activeCategories.includes(cat)).includes(true) ||\n        tags.map(tag => activeTags.includes(tag)).includes(true)\n      );\n    });\n\n    // Update dates and clear the error flag, if set\n    if (updateConf)\n      setConf({ ...conf, dateFrom, dateTo, err: null, numUrls: countUrls(false) });\n  }\n\n  // Get the final list of URLs used in the carousel, maybe randomized\n  const getUrls = () => {\n    const { posts, pages, categories, tags, includeCategoryPages, includeTagPages, randomOrder } = conf;\n    const urls = [];\n    urls.push(...posts.filter(post => post.selected).map(post => post.link));\n    urls.push(...pages.filter(page => page.selected).map(page => page.link));\n    if (includeCategoryPages)\n      urls.push(...categories.filter(cat => cat.selected).map(cat => cat.link));\n    if (includeTagPages)\n      urls.push(...tags.filter(cat => cat.selected).map(cat => cat.link));\n\n    return randomOrder ? shuffle(urls) : urls;\n  }\n\n  // Count the current number of valid URLs\n  const countUrls = (updateConf = true) => {\n    const numUrls = doCountUrls(conf);\n    if (updateConf)\n      setConf({ ...conf, numUrls });\n    return numUrls;\n  }\n\n  const doCountUrls = ({ pages, posts, categories, tags, includeCategoryPages, includeTagPages }) => {\n    return pages.filter(page => page.selected).length\n      + posts.filter(post => post.selected).length\n      + (includeCategoryPages ? categories.filter(cat => cat.selected).length : 0)\n      + (includeTagPages ? tags.filter(tag => tag.selected).length : 0);\n  }\n\n  // Shuffle the provided array using the Fisher-Yates (aka Knuth) algorithm\n  // See: https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\n  const shuffle = array => {\n    let currentIndex = array.length;\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      const randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      // And swap it with the current element.\n      let temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n    return array;\n  }\n\n  const saveSettings = () => {\n    // Update the `STORED_VALUES` object\n    Object.assign(STORED_VALUES, {\n      wpSite: conf.wpSite,\n      interval: conf.interval,\n      from: conf.dateFrom.getTime(),\n      to: conf.dateTo.getTime(),\n      includeCategoryPages: conf.includeCategoryPages,\n      includeTagPages: conf.includeTagPages,\n      randomOrder: conf.randomOrder,\n      categories: conf.categories.filter(e => e.selected).map(e => e.id),\n      tags: conf.tags.filter(e => e.selected).map(e => e.id),\n      pages: conf.pages.filter(e => e.selected).map(e => e.id),\n      posts: conf.posts.filter(e => e.selected).map(e => e.id),\n    });\n\n    // Save settings in browser's local storage\n    localStorage.setItem('wpShow', JSON.stringify(STORED_VALUES));\n  }\n\n  // Main content\n  return (\n    <div className=\"App\">\n      {!playing &&\n        <div>\n          <Header {...{ t, i18n }} />\n          <Settings {...{ conf, setConf, checkSite, selectPostsByDateAndCategory, countUrls, t, i18n }} />\n          <ActionButtons {...{ conf, saveSettings, i18n, t, getUrls, setPlaying }} />\n          <Footer {...{ t }} />\n        </div>\n      }\n      {playing &&\n        <PageCarousel urls={getUrls()} interval={conf.interval} />\n      }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}